version: '3.8'

services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog
    networks:
      - internal_net

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - internal_net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - '8080:8080'
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - kafka
    networks:
      - internal_net

  mysql:
    image: mysql:latest
    container_name: 2025_mysql
    ports:
      - '3306:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "-uroot", "-p${MYSQL_ROOT_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      MYSQL_ROOT_PASSWORD: secret_pw
      MYSQL_DATABASE: money_tracker
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: money_tracker
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - internal_net

  authservice:
    image: 339495302685.dkr.ecr.ap-south-1.amazonaws.com/authservice:latest
    container_name: authservice
    ports:
      - '9898:9898'
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - internal_net

  userservice:
    image: 339495302685.dkr.ecr.ap-south-1.amazonaws.com/userservice:latest
    container_name: userservice
    ports:
      - '9899:9899'
    depends_on:
      kafka:
        condition: service_started
    networks:
      - internal_net

  gateway:
    image: 339495302685.dkr.ecr.ap-south-1.amazonaws.com/gateway:latest
    container_name: gateway
    ports:
      - "9897:9897"
    depends_on:
      - authservice
      - userservice
    networks:
      - internal_net

volumes:
  kafka_data:
  mysql_data:
  zookeeper_data:
  zookeeper_datalog:

networks:
  internal_net:
    driver: bridge
